<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>
        BASIC blog full text feed    </title>
        <link href="/blog/atom.xml" rel="self" />
    
        <link href="/"/>
    
        
    <updated>2015-11-23T13:05:06Z</updated>

    <id>/blog/atom.xml/</id>

            <entry>
            <title type="html">Customizing Gnome Shell</title>
            <author><name>Dipesh Acharya</name></author>
            <link href="/blog/customizing-gnome-shell.html"/>
            <updated>2011-08-09T10:00:00Z</updated>
            <published>2011-08-09T10:00:00Z</published>
            <id>/blog/customizing-gnome-shell.html</id>
                        <category   scheme="/blog/tags"
                        term="gnome"
                        label="Gnome" />
            
            <content type="html">
                                &lt;p&gt;Gnome shell refers to the &lt;span class=&#34;caps&#34;&gt;UI&lt;/span&gt; of Gnome 3, the latest incarnation of Gnome desktop environment.
The first thing a gnome 2 user notices on a gnome shell is the lack of familiar things. Windows on Gnome shell have no minimize and maximize buttons by default, only one lonely close button. The day and current time placed in the middle of the shell panel on top looks awkward. There are no such Applications, Places or System menu.
Clicking on the Activities button on top left gives you an overview of currently running windows which can also be achieved by pressing the Super/System key (the one with Windows logo) or the Alt+F1 combination. You can click on Applications to reveal applications installed on your system, categories are available on right. I am very much thankful to them for keeping the Alt+F2 (for run command prompt) and Alt+Tab (for switching between applications) functionalities&amp;nbsp;intact.&lt;/p&gt;
&lt;p&gt;They have added Looking Glass (https://live.gnome.org/GnomeShell/LookingGlass) which one might use to do simple arithmetic calculations at least if not debugging gnome shell extensions and&amp;nbsp;things.&lt;/p&gt;
&lt;p&gt;Double clicking on the titlebar maximizes the window. On a default system, minimizing is possible only with a right click on the title bar. The concept of minimizing has gone with Gnome 3, Windows are hidden instead. Ctrl+Alt+D doesn&amp;#8217;t show you your desktop, wait, there is no such traditional desktop folder in this environment. Ctrl+Alt+(Left/Right) doesn&amp;#8217;t switch workspaces as in Gnome 2, Ctrl+Alt+(Up/Down) does. More on keyboard shortcuts and components of the shell are documented here in the official cheat-sheet :&amp;nbsp;https://live.gnome.org/GnomeShell/CheatSheet&lt;/p&gt;
&lt;p&gt;The User Menu exists on the top right of the screen which has the logout etcetera options. &amp;#8216;Suspend&amp;#8217; turns into &amp;#8216;Power Off&amp;#8217; as Alt key is&amp;nbsp;pressed.&lt;/p&gt;
&lt;p&gt;Here are some gnome shell tips, tricks and customizations that might make you more comfortable with it and help you get&amp;nbsp;adopted:&lt;/p&gt;
&lt;p&gt;1. Restart Gnome Shell
Incase, gnome is giving problems or if you want to see the changes made:
Alt+F2 to open run command prompt
Press r and Enter
You will be using this to see changes made by any of the following tweaks you would be&amp;nbsp;applying.&lt;/p&gt;
&lt;p&gt;2. Install gnome-tweak-tool
gnome-tweak-tool allows you to modify various gnome settings and behaviour.
&lt;code&gt;yum install gnome-tweak-tool&lt;/code&gt;
Then, execute &lt;code&gt;gnome-tweak-tool&lt;/code&gt;.
Go through the options and tweak Gnome to your feel.
[E.g. Shell -&amp;gt; Show Date in Clock : &lt;span class=&#34;caps&#34;&gt;ON&lt;/span&gt;]&lt;/p&gt;
&lt;p&gt;3 . Adding Minimize and Maximize button to the title bar:
&lt;code&gt;gconftool-2 -s -t string /desktop/gnome/shell/windows/button_layout &#34;menu:minimize,maximize,close&#34;&lt;/code&gt;
&lt;span class=&#34;caps&#34;&gt;OR&lt;/span&gt;
Alt+F2 to open run command prompt
&lt;code&gt;gnome-tweak-tool&lt;/code&gt;
Select &amp;#8216;Shell&amp;#8217;
Arrangement of buttons on the titlebar: All
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;4. Get your classic desktop back:
Alt+F2 to open run command prompt
&lt;code&gt;gnome-tweak-tool&lt;/code&gt;
Select &amp;#8216;File Manager&amp;#8217;
Have File Manager Handle the Desktop : &lt;span class=&#34;caps&#34;&gt;ON&lt;/span&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;5. Use the following command to add/remove startup items:
&lt;code&gt;gnome-session-properties&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;6. Switch to fallback mode
Fallback mode in gnome shell gives you a &lt;span class=&#34;caps&#34;&gt;UI&lt;/span&gt; similar to that of Gnome 2.
Execute this in terminal:
gsettings set org.gnome.desktop.session session-name gnome-fallback
&lt;span class=&#34;caps&#34;&gt;OR&lt;/span&gt; System Settings -&amp;gt; System Info -&amp;gt; Graphics -&amp;gt; Forced Fallback Mode : &lt;span class=&#34;caps&#34;&gt;ON&lt;/span&gt;
[Note that this is what you will be using to go back to normal mode with &lt;span class=&#34;caps&#34;&gt;OFF&lt;/span&gt; flag]
[System Settings is available from User Menu on top&amp;nbsp;right]&lt;/p&gt;
&lt;p&gt;6. Get a taskbar
Gnome shell has no taskbar on regular mode. You need to install a third party application that works as a taskbar. tint2 is a nice light application for this purpose.
&lt;code&gt;yum install tint2&lt;/code&gt;
See next step to set it to start automatically on every&amp;nbsp;login.&lt;/p&gt;
&lt;p&gt;7. Adding applications on login:
We are setting tint2 to start on login. The technique is same for any other application.
Execute &lt;code&gt;gnome-session-properties&lt;/code&gt;
Add
Name : tint2
Command : tint2
Description : Shows&amp;nbsp;taskbar&lt;/p&gt;
&lt;p&gt;8. Customize the application menu.
Application called alacarte lets you edit, add or delete menu entries in gnome3.
&lt;code&gt;#yum install alacarte&lt;/code&gt;
Execute:
&lt;code&gt;$alacarte&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;9. Make the massive title bar smaller:
&lt;code&gt;sed -i &#34;/title_vertical_pad/s/value=\&#34;[0-9]\{1,2\}\&#34;/value=\&#34;0\&#34;/g&#34; /usr/share/themes/Adwaita/metacity-1/metacity-theme-3.xml&lt;/code&gt;
Restart Gnome (Alt+F2 -&amp;gt;&amp;nbsp;r)&lt;/p&gt;
&lt;p&gt;10. More power options on user menu [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Adds, &amp;#8216;Power Off&amp;#8217;, &amp;#8216;Hibernate&amp;#8217;, etc. options to the User Menu.
&lt;code&gt;yum install gnome-shell-extensions-alternative-status-menu&lt;/code&gt;
&lt;span class=&#34;caps&#34;&gt;OR&lt;/span&gt;:
Download http://www.fpmurphy.com/gnome-shell-extensions/poweroptions-2.0.tar.gz
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;11. Get sidebar docks for your favorites [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
If you want dock on gnome install this package - gnome-shell-extensions-dock.
&lt;code&gt;yum install gnome-shell-extensions-dock&lt;/code&gt;
Restart gnome and docks shall appear!
I prefer the next extension instead of this one, this one just eats extra&amp;nbsp;space.&lt;/p&gt;
&lt;p&gt;12. Add your favorites to top panel like Quick Launch [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Download http://www.fpmurphy.com/gnome-shell-extensions/panellaunchers.tar.gz
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;13. Add Places Menu on Gnome Panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Adds Places, bookmarks and removable devices on a menu available from the Gnome panel.
&lt;code&gt;yum install gnome-shell-extensions-places-menu&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;14. Add Removable Devices Menu on Gnome Panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
&lt;code&gt;yum -y install gnome-shell-extensions-drive-menu&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;15. Remove username from panel and &lt;span class=&#34;caps&#34;&gt;IM&lt;/span&gt; status (Available/Busy) from user menu [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
&lt;code&gt;yum -y install gnome-shell-extension-noim&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;16. Add Applications Menu on top panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Adds Applications menu that reveals categories of applications available.
Download http://www.fpmurphy.com/gnome-shell-extensions/applicationsbutton.tar.gz
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;17. Move Clock/Calendar to Right [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Download http://www.fpmurphy.com/gnome-shell-extensions/moveclock.tar.gz
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;18. Moves Clock/Calendar to Right [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Download http://www.fpmurphy.com/gnome-shell-extensions/moveclock.tar.gz
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;19. Remove Universal Access (AllY) from panel status area [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
&lt;code&gt;yum -y install gnome-shell-extension-remove-accessibility-icon&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;20. Add Workspace indicator/selector to the status bar on panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
&lt;code&gt;yum -y install gnome-shell-extension-workspacesmenu&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;21. Add Force Quit Button on Gnome Panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Double Clicking it and selection a non-responding application would kill that application instantly.
Download http://github.com/xtranophilist/gnome-shell-extension-force-quit/zipball/master
Extract its contents to ~/.local/share/gnome-shell/extensions/
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;22. Add system monitor applet [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
Installing this one requires slightly more job than the others, but worth it.
Run each of the following instructions on terminal, one after another.
&lt;code&gt;mkdir ~/git_projects
cd ~/git_projects
git clone git://github.com/paradoxxxzero/gnome-shell-system-monitor-applet.git
scp -r ~/git_projects/gnome-shell-system-monitor-applet/system-monitor@paradoxxx.zero.gmail.com ~/.local/share/gnome-shell/extensions
sudo cp ~/git_projects/gnome-shell-system-monitor-applet/org.gnome.shell.extensions.system-monitor.gschema.xml /usr/share/glib-2.0/schemas
cd /usr/share/glib-2.0/schemas
sudo glib-compile-schemas .&lt;/code&gt;
Don&amp;#8217;t forget the dot (.) in the last command.
Restart&amp;nbsp;Gnome&lt;/p&gt;
&lt;p&gt;23. Get &lt;span class=&#34;caps&#34;&gt;CPU&lt;/span&gt; tempertature on the panel [&lt;span class=&#34;caps&#34;&gt;EXTENSION&lt;/span&gt;]
This one is my first try with gnome extension development, its now available from Fedora Official Repository too :)
Install:
&lt;code&gt;yum -y install gnome-shell-extension-cpu-temperature&lt;/code&gt;
Restart&amp;nbsp;Gnome&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Enable root login for Linux systems</title>
            <author><name>Dipesh Acharya</name></author>
            <link href="/blog/enable-root-login-for-linux-systems.html"/>
            <updated>2011-08-07T10:00:00Z</updated>
            <published>2011-08-07T10:00:00Z</published>
            <id>/blog/enable-root-login-for-linux-systems.html</id>
                        <category   scheme="/blog/tags"
                        term="linux"
                        label="Linux" />
            
            <content type="html">
                                &lt;p&gt;&lt;strong&gt;Enable root login with Graphical&amp;nbsp;Desktop:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open terminal and switch to the superuser (root):
&lt;code&gt;$su -&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enter the root password and you are logged in as root in the&amp;nbsp;terminal.&lt;/p&gt;
&lt;p&gt;Edit the file /etc/pam.d/gdm with your favorite text editor:
&lt;code&gt;vi /etc/pam.d/gdm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;caps&#34;&gt;OR&lt;/span&gt;
&lt;code&gt;gedit /etc/pam.d/gdm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find the following line:
&lt;code&gt;auth required pam_succeed_if.so user != root quiet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Comment it to
&lt;code&gt;#auth required pam_succeed_if.so user != root quiet&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Do the same with the file &lt;em&gt;/etc/pam.d/gdm-password&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can login to &lt;span class=&#34;caps&#34;&gt;GDM&lt;/span&gt; as root from the next&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Alternative Technique :&lt;/strong&gt;
Since it is the &lt;span class=&#34;caps&#34;&gt;GUI&lt;/span&gt; that prevents you to login as root, you can login in run level 3 then start the X Windows system to get root up on Gnome or any other desktop&amp;nbsp;environment.&lt;/p&gt;
&lt;p&gt;Do this&amp;nbsp;:&lt;/p&gt;
&lt;p&gt;Modify your bootloader configuration to set system boot into runlevel&amp;nbsp;3.&lt;/p&gt;
&lt;p&gt;Grub is the default bootloader for most systems. /etc/grub.conf is a soft link to its configuration file which resides on /boot&amp;nbsp;actually.&lt;/p&gt;
&lt;p&gt;Let us open it with our favorite text editor.
&lt;code&gt;vi /etc/grub.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;caps&#34;&gt;OR&lt;/span&gt; if you are on &lt;span class=&#34;caps&#34;&gt;GUI&lt;/span&gt; and more if you are comfortable with gedit
&lt;code&gt;gedit /etc/grub.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Find the block item for your boot target with a kernel&amp;nbsp;entry.&lt;/p&gt;
&lt;p&gt;Mine happens to be:
&lt;code&gt;kernel /vmlinuz-2.6.38.6-27.fc15.i686 ro root=UUID=3a141363-91f4-4cf0-9b11-968251eec075 rd_NO_LUKS rd_NO_LVM rd_NO_MD rd_NO_DM&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Append 3 as another parameter to the end to make it
&lt;code&gt;kernel /vmlinuz-2.6.38.6-27.fc15.i686 ro root=UUID=3a141363-91f4-4cf0-9b11-968251eec075 rd_NO_LUKS rd_NO_LVM rd_NO_MD rd_NO_DM 3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Save and close the&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;The next time you login, you will be presented with login on terminal instead of &lt;span class=&#34;caps&#34;&gt;GUI&lt;/span&gt;.
Use ‘root’ for login and the root password you set during the system installation for password.
After you’ve successfully logged in, enter this
&lt;code&gt;startx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will start the default Graphical Desktop&amp;nbsp;Manager.&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Compiling VLC for root users</title>
            <author><name>Dipesh Acharya</name></author>
            <link href="/blog/compiling-vlc-for-root-users.html"/>
            <updated>2011-08-06T10:00:00Z</updated>
            <published>2011-08-06T10:00:00Z</published>
            <id>/blog/compiling-vlc-for-root-users.html</id>
                        <category   scheme="/blog/tags"
                        term="vlc"
                        label="Vlc" />
            
            <content type="html">
                                &lt;p&gt;&lt;strong&gt;&lt;span class=&#34;caps&#34;&gt;VLC&lt;/span&gt; media player&lt;/strong&gt; binaries are available in repos but &lt;span class=&#34;caps&#34;&gt;VLC&lt;/span&gt; installed from those cannot be run as root. The source code needs to be downloaded, and compiled with certain parameters that will then enable &lt;span class=&#34;caps&#34;&gt;VLC&lt;/span&gt; to be run as root&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;caps&#34;&gt;STEPS&lt;/span&gt;:&lt;/p&gt;
&lt;p&gt;1. Download the latest vlc source code tarball from :
&lt;a href=&#34;http://www.videolan.org/vlc/download-sources.html&#34; title=&#34;VLC Download Site&#34;&gt;http://www.videolan.org/vlc/download-sources.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 . Extract it:
&lt;code&gt;$tar -xvf vlc-x.x.x.tar.bz2&lt;/code&gt;
x.x.x refers to the version you’ve&amp;nbsp;downloaded.&lt;/p&gt;
&lt;p&gt;3. Change directory to the source code root
&lt;code&gt;$cd vlc-x.x.x&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4. Install libraries required to build &lt;span class=&#34;caps&#34;&gt;VLC&lt;/span&gt;
For Ubuntu and other debian systems with apt-get:
&lt;code&gt;#apt-get build-dep vlc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;On Fedora, &lt;span class=&#34;caps&#34;&gt;RHEL&lt;/span&gt;, Cent &lt;span class=&#34;caps&#34;&gt;OS&lt;/span&gt; and other &lt;span class=&#34;caps&#34;&gt;RPM&lt;/span&gt; based systems with yum:
&lt;code&gt;#yum-builddep vlc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;5. Configure the building parameters and also check no errors exist and all dependencies are fulfilled:
&lt;code&gt;#./configure --enable-run-as-root --prefix=/opt/vlc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The ‘–enable-run-as-root’ is the tweak that does – hmm, isn’t it obvious already!
The ‘–prefix’ parameter assigns where the built binaries go, in this case&amp;nbsp;/opt/vlc.&lt;/p&gt;
&lt;p&gt;6. &lt;span class=&#34;caps&#34;&gt;COMPILE&lt;/span&gt; :&amp;nbsp;`#make&lt;/p&gt;
&lt;h1&gt;make&amp;nbsp;install`&lt;/h1&gt;
&lt;p&gt;7. Optionally, clean the files created during compilation.
&lt;code&gt;#make clean&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Configuration and compiling requires some time and&amp;nbsp;patience.&lt;/p&gt;
&lt;p&gt;After all steps are complete, vlc is installed in /opt/vlc.
You can run vlc by using ‘vlc’ command.
&lt;code&gt;$vlc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Thank&amp;nbsp;you!&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">Creating a multi-boot disc - The How-To of happyBoot v3</title>
            <author><name>Dipesh Acharya</name></author>
            <link href="/blog/creating-a-multi-boot-disc.html"/>
            <updated>2011-08-05T10:00:00Z</updated>
            <published>2011-08-05T10:00:00Z</published>
            <id>/blog/creating-a-multi-boot-disc.html</id>
                        <category   scheme="/blog/tags"
                        term="isolinux"
                        label="Isolinux" />
            
            <content type="html">
                                &lt;p&gt;&lt;img alt=&#34;happyBoot Logo&#34; src=&#34;http://i51.tinypic.com/53cc8.jpg&#34; /&gt;
This how-to is created during the course of documentation of happyBoot v3.0.5 Beta released during the grand celebration of Software Freedom Day 2010 by &lt;span class=&#34;caps&#34;&gt;NOSK&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Let us start with creating a directory where the content and image shall be built.
Inside the folder you have created, create another directory ‘root’ to represent the root of the &lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt; we are building. This directory is our working&amp;nbsp;directory.&lt;/p&gt;
&lt;p&gt;Download the latest syslinux source tar file from kernel.org:
&lt;a href=&#34;http://www.kernel.org/pub/linux/utils/boot/syslinux/&#34; title=&#34;Download syslinux!&#34;&gt;http://www.kernel.org/pub/linux/utils/boot/syslinux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inside our working directory, create /boot folder.
/boot shall hold files related to booting, i.e. the boot menus, kernels, initial ramdisks, etc.
/boot/isolinux shall hold isolinux&amp;nbsp;files.&lt;/p&gt;
&lt;p&gt;Extract the downloaded syslinux archive, find the following files. and copy them to /boot/isolinux.
chain.c32
isolinux.bin
memdisk
menu.c32
vesamenu.c32&amp;nbsp;reboot.c32&lt;/p&gt;
&lt;p&gt;isolinux.bin is the boot loader file. menu.c32 is required only if we are creating the menu in normal mode where background images and other graphical options are not possible. vesamenu.c32 provides support for background images and other graphical options and we are using this type of menu. memdisk can emulate disk images as disks. It can be used to boot the system off floppy images and even smaller &lt;span class=&#34;caps&#34;&gt;CD&lt;/span&gt; ISOs. syslinux has many other files &lt;span class=&#34;caps&#34;&gt;COM32&lt;/span&gt; images with .c32 extensions which are used after booting for various purposes. reboot.c32 is used to reboot the machine. There are other files like gfxboot.c32 which we are not including here. gfxboot supports more advanced, powerful and high-graphics menu but requires complex scripting and needs them to be archived, so it’s little difficult creating and testing multi-boot &lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;mkiso.sh script included here is the script for generating &lt;span class=&#34;caps&#34;&gt;ISO&lt;/span&gt; image. It uses mkisofs for image creation.
Edit it with your favorite text-editor to specify the location of the output image after -o switch and the root location of the &lt;span class=&#34;caps&#34;&gt;CD&lt;/span&gt; (where /boot/ is located) at the end of the line.
Save the scrpt in system path (e.g. /usr/bin) with executable permission.
This will save our time. When we execute ‘mkiso’ new image will be created at the specified location using boot/isolinux/isolinux.bin as the eltorito boot&amp;nbsp;image.&lt;/p&gt;
&lt;p&gt;Also. for testing purposes, we set up a virtual machine. VirtualBox or Qemu should be the best&amp;nbsp;option.&lt;/p&gt;
&lt;p&gt;The setup is done by now.
The major work lies in integration of the&amp;nbsp;distributions.&lt;/p&gt;
&lt;p&gt;Our first job while integrating an &lt;span class=&#34;caps&#34;&gt;OS&lt;/span&gt; into our mult-boot &lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt; is to understand its boot loader.
Almost all linux distributions use &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; as the bootloader. &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; files are generally located at /isolinux/ or /boot/isolinux in the boot media.
I would recommend you to read the online and offline syslinux and isolinux documentation and references before continuing. The offline source should be the documents inside the syslinux archive which you have just&amp;nbsp;downloaded.&lt;/p&gt;
&lt;p&gt;Let’s start our integration with &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; (Damn Small Linux). We mount it’s &lt;span class=&#34;caps&#34;&gt;ISO&lt;/span&gt; image and browse to the root of its &lt;span class=&#34;caps&#34;&gt;CD&lt;/span&gt; image. We see isolinux is located in /boot/isolinux. We copy everything else into our working root except the boot folder because /boot/isolinux would conflict with ours. So, we create /boot/&lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; in our location where we copy the contents of /boot/isolinux from &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; image. Since, we have changed the location of &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; boot configuration files, we have to edit isolinux.cfg in /boot/&lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; and add /boot/&lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; to every file location. Otherwise &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; would search it in /boot/isolinux instead. So lines like ‘&lt;span class=&#34;caps&#34;&gt;DISPLAY&lt;/span&gt; boot.msg’ is edited to ‘&lt;span class=&#34;caps&#34;&gt;DISPLAY&lt;/span&gt; /boot/dsl/boot.msg’, ‘&lt;span class=&#34;caps&#34;&gt;KERNEL&lt;/span&gt; linux24’ to ‘&lt;span class=&#34;caps&#34;&gt;KERNEL&lt;/span&gt; /boot/dsl/linux24’, ‘&lt;span class=&#34;caps&#34;&gt;KERNEL&lt;/span&gt; memtest’ to ‘&lt;span class=&#34;caps&#34;&gt;KERNEL&lt;/span&gt; /boot/dsl/memtest’. Also, we have to edit ‘initrd=minitr24.gz’ to ‘initrd=/boot/dsl/minitr24.gz’ in the &lt;span class=&#34;caps&#34;&gt;APPEND&lt;/span&gt;&amp;nbsp;lines.&lt;/p&gt;
&lt;p&gt;Now, we are going to add an entry of Damn Small Linux in our mult-boot menu. The configuration file for multi-boot menu is /boot/isolinux/isolinux.cfg.
See the file menu.txt for help and reference on &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; menu configuration inside the ‘doc’ folder of syslinux archive.
The following lines have to be used.
&lt;span class=&#34;caps&#34;&gt;LABEL&lt;/span&gt; dsl
&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;LABEL&lt;/span&gt; ^1. Damn Small Linux v4.4.10
&lt;span class=&#34;caps&#34;&gt;KERNEL&lt;/span&gt; vesamenu.c32
&lt;span class=&#34;caps&#34;&gt;APPEND&lt;/span&gt; /boot/dsl/isolinux.cfg
&lt;span class=&#34;caps&#34;&gt;TEXT&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;HELP&lt;/span&gt;
A 50 &lt;span class=&#34;caps&#34;&gt;MB&lt;/span&gt; near complete Operating System for Personal Computers.
Includes system utilities, multimedia, office and gaming and other goodies.
&lt;span class=&#34;caps&#34;&gt;ENDTEXT&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;‘&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;LABEL&lt;/span&gt; ‘ would show in the menu while booting.
Text between &lt;span class=&#34;caps&#34;&gt;TEXT&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;HELP&lt;/span&gt; and &lt;span class=&#34;caps&#34;&gt;EXNDTEXT&lt;/span&gt; would be shown as help text in the bottom.
This entry loads vesamenu.c32 &lt;span class=&#34;caps&#34;&gt;COM32&lt;/span&gt; Image with /boot/dsl/isolinux.cfg as parameter. This infact means load another &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; menu (sub-menu).
Now, we can create the image with mkiso and test if it boots &lt;span class=&#34;caps&#34;&gt;OK&lt;/span&gt; in VirtualBox. It should.
The ‘^’ key before ‘1’, sets ‘1’ as the hotkey for selection of this menu. Use it before any character to make the character the&amp;nbsp;hot-key.&lt;/p&gt;
&lt;p&gt;Similar should have been the ways of integration for most OSes. But, unfortunately different techniques are used by different OSes making our job difficult. Ubuntu Desktop Edition and openSUSE use gfxboot which I couldn’t load directly from vesamenu.c32 (Error setting up gfxboot, or something like that was returned as error, there has to be a way). So, we need to create submenus for them ( not a difficult job, if you are good with &lt;span class=&#34;caps&#34;&gt;GRUB&lt;/span&gt; or any other bootloader) and create entries for them in the main menu. Boot files of Ubuntu were copied to /boot/ubuntu. The boot files of openSUSE exist in /boot/i386/loader which was let in its own location. isolinux.cfg was edited to and absolute path of file names were written. This step is necessary with every distro integration because our bootloader searches the files in its own folder&amp;nbsp;otherwise.&lt;/p&gt;
&lt;p&gt;Fedora has its boot configuration in /isolinux but kernel on /&lt;span class=&#34;caps&#34;&gt;EFI&lt;/span&gt; (the kernel and memtest in /isolinux are 0 bytes). So, all files except kernel and memtest were copied to /&lt;span class=&#34;caps&#34;&gt;EFI&lt;/span&gt;. isolinux.cfg was edited accordingly and pointed in /boot/isolinux/isolinux.cfg like done for &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt;. Fedora kernel won’t find the live file system unless we specify the append &lt;span class=&#34;caps&#34;&gt;CD&lt;/span&gt; label to the kernel. We need to edit all &lt;span class=&#34;caps&#34;&gt;APPEND&lt;/span&gt; lines in /&lt;span class=&#34;caps&#34;&gt;EFI&lt;/span&gt;/isolinux.cfg and use “root=live:happyBootv3” parameter (without quotes). We are assuming ‘happyBootv3’ is the &lt;span class=&#34;caps&#34;&gt;CD&lt;/span&gt;/&lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt; label name. You can change it in mkiso&amp;nbsp;script.&lt;/p&gt;
&lt;p&gt;Integrating &lt;span class=&#34;caps&#34;&gt;UBCD&lt;/span&gt; is easy. We just need to point the sub-menu to&amp;nbsp;/ubcd/menus/isolinux/main.cfg.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;caps&#34;&gt;UBCD&lt;/span&gt; has Parted Magic inside it. If you need to integrate Parted Magic by yourself because you don’t want &lt;span class=&#34;caps&#34;&gt;UBCD&lt;/span&gt; or if you want the latest version, then you can copy /boot/isolinux from Parted Magic &lt;span class=&#34;caps&#34;&gt;ISO&lt;/span&gt; to /boot/pmagic, similar to what we did with &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt;. Copy other contents into our working directory (pmagic is the only other folder). Edit the /boot/pmagic/isolinux.cfg file like we did for &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; and then point to this menu from /boot/isolinux/isolinux.cfg. We can also edit the &lt;span class=&#34;caps&#34;&gt;UBCD&lt;/span&gt; menu to link to the updated Parted&amp;nbsp;Magic.&lt;/p&gt;
&lt;p&gt;GeexBox is a wonderful under 20 &lt;span class=&#34;caps&#34;&gt;MB&lt;/span&gt; complete multimedia &lt;span class=&#34;caps&#34;&gt;OS&lt;/span&gt;. Its &lt;span class=&#34;caps&#34;&gt;ISO&lt;/span&gt; has only folder /&lt;span class=&#34;caps&#34;&gt;GEEXBOX&lt;/span&gt; in it. Copy it into our multi-boot &lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt; root. Its isolinux configuration files are located in /&lt;span class=&#34;caps&#34;&gt;GEEXBOX&lt;/span&gt;/boot. We edit /&lt;span class=&#34;caps&#34;&gt;GEEXBOX&lt;/span&gt;/boot/isolinux.cfg to use absolute path for kernel and initrd files. We also add it into our menu&amp;nbsp;/boot/isolinux/isolinux.cfg.&lt;/p&gt;
&lt;p&gt;Finally, we customize the boot menu looks.
We will look after each entry used.
&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;BACKGROUND&lt;/span&gt; /boot/isolinux/main.jpg
This makes &lt;span class=&#34;caps&#34;&gt;ISOLINUX&lt;/span&gt; load main.jpg as the background. You can use any image, provided it is 640×480 &lt;span class=&#34;caps&#34;&gt;JPG&lt;/span&gt; or &lt;span class=&#34;caps&#34;&gt;PNG&lt;/span&gt;.
&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;TITLE&lt;/span&gt; happyBoot v3.0b &lt;span class=&#34;caps&#34;&gt;SFD10&lt;/span&gt; Release
This sets the title.
&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;COLOR&lt;/span&gt; title 1;36;44 #ffff0000 #00000000 std
Sets title foreground color to blue.
&lt;span class=&#34;caps&#34;&gt;MENU&lt;/span&gt; &lt;span class=&#34;caps&#34;&gt;ROWS&lt;/span&gt; 14
Uses 14 rows for menu options.
F1 /boot/docs/help.txt
Displays help file when F1 is&amp;nbsp;hit.&lt;/p&gt;
&lt;p&gt;See menu.txt inside doc folder in syslinux archive for more&amp;nbsp;references.&lt;/p&gt;
&lt;p&gt;Make the changes, execute mkiso and boot the&amp;nbsp;image.&lt;/p&gt;
&lt;p&gt;If you aren’t using mkiso script, take care:
“mkisofs -U” solves ubuntu problem of ‘unable to find live file system’ error.
“mkisofs -U -R” solves the problem with &lt;span class=&#34;caps&#34;&gt;DSL&lt;/span&gt; – can’t find &lt;span class=&#34;caps&#34;&gt;KNOPPIX&lt;/span&gt; filesystem&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;This document has not been written to deep details and therefore may not be useful to beginners. Also, this job has no huge complexibility that it requires an advanced user. As already told, this how-to was written as a part of documentation for the &lt;span class=&#34;caps&#34;&gt;DVD&lt;/span&gt; release of happyBoot v3 done in Software Freedom Day 2010 organised by Nepal Open Source&amp;nbsp;Klub.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Screenshots:&lt;/strong&gt;
The main menu:
&lt;img alt=&#34;happyBoot Main Menu&#34; src=&#34;http://i53.tinypic.com/o05g07.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;One of the sub-menus (Parted Magic):
&lt;img alt=&#34;happyBoot sub-menu - Parted Magic&#34; src=&#34;http://i53.tinypic.com/30ka77l.jpg&#34; /&gt;&lt;/p&gt;            </content>
        </entry>
            <entry>
            <title type="html">“E-mail this file” option in right-click/context menu for Nautilus</title>
            <author><name>Dipesh Acharya</name></author>
            <link href="/blog/e-mail-this-file-option-in-right-clickcontext-menu.html"/>
            <updated>2011-08-04T10:00:00Z</updated>
            <published>2011-08-04T10:00:00Z</published>
            <id>/blog/e-mail-this-file-option-in-right-clickcontext-menu.html</id>
                        <category   scheme="/blog/tags"
                        term="nautilus"
                        label="Nautilus" />
            
            <content type="html">
                                &lt;p&gt;&lt;strong&gt;[ Outdated with new versions of Nautilus&amp;nbsp;]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This should work for all Linux users with &lt;strong&gt;Nautilus&lt;/strong&gt; file&amp;nbsp;manager.&lt;/p&gt;
&lt;p&gt;First install the package – “&lt;em&gt;nautilus-actions&lt;/em&gt;“.&lt;/p&gt;
&lt;p&gt;For Fedora, &lt;span class=&#34;caps&#34;&gt;RHEL&lt;/span&gt;, Cent &lt;span class=&#34;caps&#34;&gt;OS&lt;/span&gt; and other &lt;span class=&#34;caps&#34;&gt;RPM&lt;/span&gt; based distributions
&lt;code&gt;yum install nautilus-actions&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For debian based distributions
&lt;code&gt;apt-get install nautilus-actions&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Fire “&lt;em&gt;Nautilus Action Editor &lt;span class=&#34;caps&#34;&gt;GUI&lt;/span&gt;&lt;/em&gt;” either from &lt;em&gt;System -&amp;gt; Preferences -&amp;gt; Nautilus Actions Configuration&lt;/em&gt; or from command line:
&lt;code&gt;open nautilus-actions-config-tool&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;From the tool-bar (below menubar), use the first button to ‘&lt;em&gt;Define a new action&lt;/em&gt;‘. In the ‘Context Label’ field seen on the ‘Action’ tab, use something like ‘&lt;strong&gt;E-mail this file&lt;/strong&gt;‘. And then switch to the ‘&lt;em&gt;Command&lt;/em&gt;‘ tab and follow the following steps for your choice of e-mail&amp;nbsp;client:&lt;/p&gt;
&lt;p&gt;For using &lt;strong&gt;Evolution&lt;/strong&gt; as the e-mail client:
In the ‘&lt;em&gt;Command&lt;/em&gt;‘ tab, use ‘evolution’ in the &lt;em&gt;Path&lt;/em&gt; field. And in the next Parameters field:
&lt;code&gt;mailto:?attach=%u&lt;/code&gt;
%u gives the file path in&amp;nbsp;runtime.&lt;/p&gt;
&lt;p&gt;For using &lt;strong&gt;Thunderbird&lt;/strong&gt; as the e-mail client:
Now, navigate to the ‘&lt;em&gt;Command&lt;/em&gt;‘ tab, and in the path filed, use ‘thunderbird’. The next one is ‘&lt;em&gt;Parameters&lt;/em&gt;‘ field where we use
&lt;code&gt;&#39;-compose &#39;attachment=%u&#39;&lt;/code&gt; .
%u gives the file path in&amp;nbsp;runtime.&lt;/p&gt;
&lt;p&gt;We save the changes by clicking on the second button on the&amp;nbsp;tool-bar.&lt;/p&gt;
&lt;p&gt;And, optionally, make it cleaner: &lt;em&gt;Tools -&amp;gt; Preferences -&amp;gt; Runtime Preferences -&amp;gt; Nautilus Menu Layout&lt;/em&gt; Deselect &lt;em&gt;“Create a root ‘Nautilus-Actions’ menu”&lt;/em&gt; and &lt;em&gt;“Add an About Nautilus-Actions’&amp;nbsp;item…”&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;span class=&#34;caps&#34;&gt;OK&lt;/span&gt;&lt;/em&gt; and close the&amp;nbsp;window.&lt;/p&gt;
&lt;p&gt;Probably, we are done. Just in case the item isn’t visible, please find a way to restart&amp;nbsp;Nautilus.&lt;/p&gt;            </content>
        </entry>
    </feed>