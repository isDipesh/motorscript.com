(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{170:function(e,t,n){"use strict";var o={props:["title","published","updated","archived"],head:function(){return{title:this.title}}},r=n(8),component=Object(r.a)(o,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("h1",{staticClass:"title",attrs:{itemprop:"name headline"}},[e._v(e._s(e.title))]),e._v(" "),n("div",{staticClass:"time"},[e._v("Published: "),n("time",{attrs:{itemprop:"datePublished"}},[e._v(e._s(e.published))])]),e._v(" "),e.updated?n("div",{staticClass:"time"},[e._v("Updated: "),n("time",{attrs:{itemprop:"dateModified"}},[e._v(e._s(e.updated))])]):e._e(),e._v(" "),e.archived?n("div",{staticClass:"block"},[e._v("Note: This is an archived post. Information may not be relevant now.")]):e._e()])}),[],!1,null,null,null);t.a=component.exports},181:function(e,t,n){"use strict";n.r(t);var o=n(170),r={mixins:[o.a],components:{BlogTitle:o.a}},m=n(8),component=Object(m.a)(r,(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("article",{attrs:{itemprop:"blogPost",itemscope:"",itemtype:"https://schema.org/BlogPosting"}},[n("BlogTitle",{attrs:{title:"yii-comments : Comments Module for Yii",published:"10 Jul 2012",archived:"true"}}),e._v(" "),n("div",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"content",attrs:{itemprop:"articleBody"}},[e._m(0),e._v(" "),e._m(1),e._v(" "),n("h2",[e._v("Changes:")]),e._v(" "),e._m(2),e._v(" "),n("h2",[e._v("Installation")]),e._v(" "),n("h3",[e._v("Via Git:")]),e._v(" "),n("p",[e._v("From inside the modules directory in your application:")]),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),n("p",[e._v("\n        Execute the following SQL queries to create table and insert default\n        comment settings.\n      ")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),n("h2",[e._v("Usage:")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),n("h2",[e._v("Downloads")]),e._v(" "),e._m(10),e._v("\n      or download\n      "),n("a",{attrs:{href:"https://github.com/awecode/comments/zipball/master",title:"https://github.com/awecode/comments/zipball/master"}},[e._v("from here.")])])],1)}),[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("\n        yii-comments is a module for Yii Framework which allows you to make any\n        instance of CActiveRecord commentable. This is a modification of the\n        comments module available from\n        "),n("a",{attrs:{href:"https://www.yiiframework.com/extension/comments-module/"}},[e._v("https://www.yiiframework.com/extension/comments-module/")]),e._v("\n        It is supposed that you have user module installed.\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("[Note: This extension isnâ€™t maintained any more.]")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[e._v("Added Gravatar Support")]),e._v(" "),n("li",[e._v("Better Comment Management")]),e._v(" "),n("li",[e._v("Admin interface for editing comments")]),e._v(" "),n("li",[e._v("Admin interface for comments settings")]),e._v(" "),n("li",[e._v("\n          Anchor for each comments (e.g. http://example.com/page/1#comment-12)\n        ")]),e._v(" "),n("li",[e._v("Better User Interaction")]),e._v("\n        and others.\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"language-bash command-line",attrs:{"data-prompt":"$"}},[n("code",[e._v("git clone https://github.com/awecode/comments.git")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("\n        OR Download :\n        "),n("a",{attrs:{href:"https://github.com/awecode/comments/zipball/master"}},[e._v("https://github.com/awecode/comments/zipball/master")]),n("br"),e._v("\n        Extract the contents and move to "),n("code",[e._v("comments")]),e._v(" folder inside\n        modules.\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"language-bash"},[n("code",[e._v("CREATE TABLE IF NOT EXISTS `comment` (\n`id` int(12) NOT NULL AUTO_INCREMENT,\n`owner_id` int(11) NOT NULL,\n`owner_name` varchar(50) NOT NULL,\n`count` int(11) NOT NULL,\n`parent_id` int(12) DEFAULT NULL,\n`creator_id` int(12) DEFAULT NULL,\n`user_name` varchar(128) DEFAULT NULL,\n`user_email` varchar(128) DEFAULT NULL,\n`comment_text` text,\n`create_time` int(11) DEFAULT NULL,\n`update_time` int(11) DEFAULT NULL,\n`status` int(1) NOT NULL DEFAULT '0',\n`link` text,\nPRIMARY KEY (`id`)\n);\n\nCREATE TABLE IF NOT EXISTS `comment_setting` (\n`id` int(11) NOT NULL AUTO_INCREMENT,\n`model` varchar(50) NOT NULL,\n`registeredOnly` tinyint(1) NOT NULL DEFAULT '0',\n`useCaptcha` tinyint(1) NOT NULL DEFAULT '0',\n`allowSubcommenting` tinyint(1) NOT NULL DEFAULT '1',\n`premoderate` tinyint(1) NOT NULL DEFAULT '0',\n`isSuperuser` text,\n`orderComments` enum('ASC','DESC') NOT NULL DEFAULT 'ASC',\n`useGravatar` tinyint(1) NOT NULL DEFAULT '1',\nPRIMARY KEY (`id`)\n);\n\nINSERT INTO `comment_setting` (`id`, `model`, `registeredOnly`, `useCaptcha`, `allowSubcommenting`, `premoderate`, `isSuperuser`, `orderComments`, `useGravatar`) VALUES\n(1, 'default', 0, 0, 1, 1, 'Yii::app()->getModule(\"user\")->isAdmin()', 'ASC', 1);\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Edit "),n("code",[e._v("config/main.php")]),e._v(":")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"language-bash"},[n("code",[e._v("'import' => array(\n        'application.modules.comments.widgets.*',\n        'application.modules.comments.components.*',\n        'application.modules.comments.models.*',\n        ...\n    ),\n'modules' => array(\n        ...\n        'comments' => array(\n            'userConfig' => array(\n                'class' => 'User',\n                'nameProperty' => 'username',\n                'emailProperty' => 'email',\n            ),\n        ),\n),\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("\n        Add\n        "),n("code",[e._v("$this->widget('Comments', array('model' => $model));")]),e._v("\n        to the view of any model to make it commentable.\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("\n        Go to the URL "),n("code",[e._v("/comments")]),e._v(" to manage comments and to play with\n        the settings.\n      ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{staticClass:"language-bash command-line",attrs:{"data-prompt":"$"}},[n("code",[e._v("git clone https://github.com/awecode/comments.git")])])}],!1,null,null,null);t.default=component.exports}}]);